//Time:O(knlogk)
//Space:O(k)

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
import java.util.*;
class Solution {
    
    public ListNode mergeKLists(ListNode[] lists) {
        if (lists.length == 0) return null;
        
        Queue<ListNode> q = new PriorityQueue<>(new Comparator<ListNode>(){  //注意heap里的compare方法要重写
            @Override  
            public int compare(ListNode l1, ListNode l2) {  
                return l1.val-l2.val;  
            }  
        });  
        
        for (ListNode node: lists) {
            if (node != null) {
                q.offer(node);    
            }
        }
        
        ListNode head = new ListNode(0);
        ListNode dummy = head;
        
        while (!q.isEmpty()) {
            ListNode cur = q.poll();
            
            dummy.next = cur;
            dummy = dummy.next;
            
            if (cur.next != null) {
                q.offer(cur.next);
            }
        }
        
        return head.next;
    }
}