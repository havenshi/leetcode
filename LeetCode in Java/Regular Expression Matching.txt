//Time:O(n)
//Space:O(n)

class Solution {
    public boolean isMatch(String s, String p) {
        int lenS = s.length();
        int lenP = p.length();
        boolean[][] dp = new boolean[lenP+1][lenS+1];
        
        dp[0][0] = true;
        for (int i=1; i<=lenP; i++){
            //不用管'.'的情况，因为此时col==0，即列上没有元素，一定为false
            if (p.charAt(i-1) == '*'){
                dp[i][0] = (dp[i-1][0] || dp[i-2][0]);
            }
        }
        
        for (int i=1; i<=lenP; i++){
            for (int j=1; j<=lenS; j++){
                if (p.charAt(i-1) == '.'){
                    dp[i][j] = dp[i-1][j-1];
                }
                else if (p.charAt(i-1) == '*'){
                    dp[i][j] = (dp[i-1][j] || dp[i-2][j] || (dp[i][j-1] && (p.charAt(i-2)==s.charAt(j-1)|| p.charAt(i-2)=='.'))); 
                    //注意不要落下dp[i][j-1]，表示纵row为*时除了省去*和char*，可能还有省去col的任意char的情况
                }
                else{
                    dp[i][j] = dp[i-1][j-1] && p.charAt(i-1) == s.charAt(j-1);
                }
            }
        }
        return dp[lenP][lenS];
    }
}