//Time:O(n^2)
//Space:(C(n,3))
import java.util.*;
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {  
        List<List<Integer>> res = new ArrayList<List<Integer>>(); 
        if (nums.length < 3) return res;
  
        Arrays.sort(nums);
        for (int i = 0; i < nums.length - 2; i++) {  
            if (i != 0 && nums[i] == nums[i - 1]) continue;
            
            int start = i + 1;  
            int end = nums.length - 1;  
            int target = -nums[i];
            while (start < end) { 
                if (nums[start]+nums[end]==target) {  
                    List<Integer> tmp = new ArrayList<Integer>();
                    tmp.add(nums[i]);
                    tmp.add(nums[start]);
                    tmp.add(nums[end]);   
                    res.add(tmp);  
                    start++;  
                    end--;  
                    while (start < end && nums[start] == nums[start - 1]) {  
                        start ++;  
                    }  
                    while (start < end && nums[end] == nums[end + 1]) {  
                        end --;  
                    }  
                } else if (nums[start]+nums[end]>target) {  
                    end--;  
                } else {  
                    start++;  
                }      
            }  
        }  
  
        return res;  
    }  
}  