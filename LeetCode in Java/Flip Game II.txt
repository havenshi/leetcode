# You are playing the following Flip Game with your friend: Given a string that contains only these two characters: + and -, you and your friend
#
#  take turns to flip two consecutive "++" into "--". The game ends when a person can no longer make a move and therefore the other person
#
# will be the winner.
#
# Write a function to determine if the starting player can guarantee a win.
#
# For example, given s = "++++", return true. The starting player can guarantee a win by flipping the middle "++" to become "+--+".
#
# Follow up:
# Derive your algorithm's runtime complexity.


//Time:O(2^n)
//Space:O(2^n)

import java.util.*;

public class Solution {  
    public boolean canWin(String s) {  
        char[] arr = s.toCharArray();  
       for(int i = 0; i < arr.length - 1; i++){  
            if(arr[i] == '+' && arr[i + 1] == '+'){  
                arr[i] = '-';  
                arr[i + 1] = '-';   
                if(!canWin(String.valueOf(arr))) {  
                    return true;  
                }  
                arr[i + 1] = '+';  
                arr[i] = '+';  
            }  
        }          
        return false;  
    }  

    public static void main(String[] args)
    {
        Solution ans = new Solution();
        System.out.println(ans.canWin("+--+"));
    }
 
}