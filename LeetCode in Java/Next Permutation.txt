// Time:  O(n)
// Space: O(1)
class Solution {
    public void nextPermutation(int[] nums) {
        //从最后开始一串descending的数字之前的较小数字，与这串里面最后比它大的交换，一串再ascending排序。注意相同数字的处理。
        if (nums.length<=1) return;
        int i = nums.length-2;
        while (i>=0){
            if (nums[i]<nums[i+1]){ //不含等于
                break;
            }
            i--;
        }
        if (i==-1) Arrays.sort(nums); //nums全部是倒序，不存在i，所以返回正序即可。
        else{
            int j=i+1;
            while (j<nums.length){
                if (nums[j]>nums[i]){ //不含等于，要找到最后比它大的数
                    j++;
                    continue;
                }
                else break;
            }
            j--;
            int tmp = nums[i];
            nums[i] = nums[j];
            nums[j] = tmp;
            Arrays.sort(nums,i+1,nums.length);
        }
    }
}